{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(formBuilder, router) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      // Handle login logic here\n      this.navigateToSymptomsPage();\n    }\n  }\n  navigateToSymptomsPage() {\n    this.router.navigate(['/symptoms']);\n  }\n  onCancel() {\n    // Handle cancel logic here\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","formBuilder","router","ngOnInit","loginForm","group","username","required","password","onSubmit","valid","navigateToSymptomsPage","navigate","onCancel","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/enita/Desktop/MOHCC-attachees/src/app/home/home.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, private router: Router) {}\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      // Handle login logic here\n      this.navigateToSymptomsPage();\n    }\n  }\n\n  navigateToSymptomsPage() {\n    this.router.navigate(['/symptoms']);\n  }\n\n  onCancel() {\n    // Handle cancel logic here\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,QAAQA,CAAA;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACxB;MACA,IAAI,CAACC,sBAAsB,EAAE;;EAEjC;EAEAA,sBAAsBA,CAAA;IACpB,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACrC;EAEAC,QAAQA,CAAA;IACN;EAAA;CAEH;AA1BYd,cAAc,GAAAe,UAAA,EAL1BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWlB,cAAc,CA0B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}